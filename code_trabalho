#define FIRSTSENSOR A0
#define SECONDSENSOR A1
#define FIRSTLASER 13
#define SECONDLASER 12

#define s0 10
#define s1 11
#define s2 4
#define s3 5
#define OUT 3

#include <LiquidCrystal.h>

LiquidCrystal display(23, 25, 43, 45, 47, 49);
 
unsigned long tempoFirst, tempoSecond; 
int firstLine, secondLine;
float velocidade;                   //velocidade

int tamanho, cont, val;             //distancia 

int red, blue, green;               //RGB

void setup()
{

	display.begin(2,16);
	
  pinMode(s0, OUTPUT);
  pinMode(s1, OUTPUT);
  pinMode(s2, OUTPUT);
  pinMode(s3, OUTPUT);
  pinMode(OUT, INPUT);             // Sensor RGB
  digitalWrite(s0, HIGH);
  digitalWrite(s1, LOW);

  
  pinMode(FIRSTSENSOR, INPUT);
  pinMode(SECONDSENSOR, INPUT); //LDRs
  
  pinMode(FIRSTLASER, OUTPUT);
  pinMode(SECONDLASER, OUTPUT);  //LASERS
  	
  digitalWrite(FIRSTLASER, HIGH);
  digitalWrite(SECONDLASER, HIGH);  //Lasers sempre ligados 
  Serial.begin(9600);
}

void loop()
{
	display.clear();
  firstLine = analogRead(FIRSTSENSOR);
  secondLine = analogRead(SECONDSENSOR);	
  
  while (firstLine > 700) {
  	firstLine = analogRead(FIRSTSENSOR);
  }
  while (firstLine <= 700) {
    tempoFirst = micros();
  	firstLine = analogRead(FIRSTSENSOR);
  }
  while (secondLine > 700) {
  	secondLine = analogRead(SECONDSENSOR);
  	val = cont;
    cont = 0;
  }
  while (secondLine <= 700) {
    tempoSecond = micros();
  	secondLine = analogRead(SECONDSENSOR);
    cont++;
  }
  velocidade = 15/(tempoSecond - tempoFirst); // 15 ? a distancia entre os dois LDRs em cm
  tamanho = val * velocidade;
  
  if(tamanho > 0){
  	//Serial.println("velocidade: " + (String)velocidade);	
		display.setCursor(0,0);
  	display.print("Tamanho: " + (String)tamanho + "cm");
		delay(5000);
		display.clear();
  }
  cor(); // Verifica cor Aqui
  
}
void cor()
{
  digitalWrite(s2, LOW);
  digitalWrite(s3, LOW);
  
  red = pulseIn(OUT, digitalRead(OUT) == HIGH ? LOW : HIGH);
  digitalWrite(s3, HIGH);
  
  blue = pulseIn(OUT, digitalRead(OUT) == HIGH ? LOW : HIGH);
  digitalWrite(s2, HIGH);
  
  green = pulseIn(OUT, digitalRead(OUT) == HIGH ? LOW : HIGH);
  
 if (red > (blue+50) && red > (green+50)) // VERMELHO
  {
		display.setCursor(2,0);
		display.print("Cor Vermelho");

    //Serial.println("Vermelho");
  }
  else if (blue > (red+50) && blue > (green+50)) //AZUL
  {
    display.setCursor(2,0);
		display.print("Cor Azul");

		//Serial.println("Azul");
  }
  else if (green > (red+50) && green > (blue+50))  //GREEN
  {
  	display.setCursor(2,0);
		display.print("Cor Verde");
  
		//Serial.println("Verde");
  }
	delay(3000);
	display.clear();  
}
